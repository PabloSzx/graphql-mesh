extend type Transform {
  federation: FederationTransform
}

type FederationTransform @md {
  types: [FederationTransformType!]
}

type FederationTransformType {
  name: String!
  config: FederationObjectConfig
}

type FederationObjectConfig {
  keyFields: [String!]
  extend: Boolean
  fields: [FederationField!]
  resolveReference: ResolveReference
}

union ResolveReference = String | ResolveReferenceObject

type ResolveReferenceObject {
  targetSource: String!
  targetMethod: String!
  args: JSON!
  returnData: String
  resultSelectedFields: JSON
  resultSelectionSet: String
  resultDepth: Int
}

type FederationField {
  name: String!
  config: FederationFieldConfig!
}

type FederationFieldConfig {
  external: Boolean
  provides: String
  requires: String
}
